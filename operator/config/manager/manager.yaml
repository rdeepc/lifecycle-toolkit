apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: controller-manager
  name: system
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: controller-manager
  namespace: system
  labels:
    control-plane: controller-manager
spec:
  selector:
    matchLabels:
      control-plane: controller-manager
  replicas: 1
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
        metrics.dynatrace.com/scrape: 'true'
        metrics.dynatrace.com/port: '2222'
        openfeature.dev/enabled: "true"
      labels:
        control-plane: controller-manager
    spec:
      securityContext:
        runAsNonRoot: true
        # TODO(user): For common cases that do not require escalating privileges
        # it is recommended to ensure that all your Pods/Containers are restrictive.
        # More info: https://kubernetes.io/docs/concepts/security/pod-security-standards/#restricted
        # Please uncomment the following code if your project does NOT have to work on old Kubernetes
        # versions < 1.19 or on vendors versions which do NOT support this field by default (i.e. Openshift < 4.11 ).
        # seccompProfile:
        #   type: RuntimeDefault
      volumes:
        - emptyDir: { }
          name: certs-dir
      containers:
      - command:
          - /manager
        args:
          - webhook-server
          # OLM mounts the certificates here, so we reuse it for simplicity
          - --certs-dir=/tmp/k8s-webhook-server/serving-certs/
          - --leader-elect
        image: controller:latest
        name: manager
        ports:
          - containerPort: 9443
            name: webhook-server
            protocol: TCP
          - name: keptn-metrics
            containerPort: 9999
            protocol: TCP
        imagePullPolicy: Always
        env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: OTEL_COLLECTOR_URL
            value: otel-collector:4317
          - name: EXPOSE_KEPTN_METRICS
            value: "true"
          - name: FUNCTION_RUNNER_IMAGE
            value: ghcr.keptn.sh/keptn/functions-runtime:v0.5.0 #x-release-please-version
        securityContext:
          seccompProfile:
            type: RuntimeDefault
          privileged: false
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          runAsUser: 65532
          runAsGroup: 65532
          capabilities:
            drop:
              - "ALL"
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        # TODO(user): Configure the resources accordingly based on the project requirements.
        # More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
        resources:
          limits:
            cpu: 100m
            memory: 64Mi
          requests:
            cpu: 10m
            memory: 32Mi
        volumeMounts:
          - name: certs-dir
            mountPath: /tmp/k8s-webhook-server/serving-certs/
      serviceAccountName: controller-manager
      terminationGracePeriodSeconds: 10

